# .bashrc.functions

function sjis() {
  cp $1 $1.bak
  iconv -f UTF-8 -t cp932 $1.bak > $1
}

function utf8() {
  cp $1 $1.bak
  iconv -t UTF-8 -f cp932 $1.bak > $1
}

function ddir() {
  d=`LANG=C date +%Y%m%d`
  mkdirc ${d}_${1}
}

function mkdirc() {
  mkdir $1 && cd $1
}

function find_dir() {
  local target=${1:-.}
  local dir=$(find $target -type d | sed -e '/.svn/d' -e '/.git/d' | fzf)
  if [ ! -z "$dir" ]; then
    cd $dir
  fi
}

function find_file() {
  local target=${1:-.}
  local file=$(find $target -type f | sed -e '/.svn/d' -e '/.git/d' | fzf)
  if [ ! -z "$file" ]; then
    echo "$file"
  fi
}

function vimbg() {
  local count=$(jobs | grep "Stopped\s*n?vim" | wc -l)
  if [ $count -gt 0 ]
  then
    echo "|vim"
  fi
}

function pecho() {
  php -r "echo $1"
  echo
}

# 指定ディレクトリのパスをツリー表示する
function dirtree() {
  if [ $# -lt 1 ]
  then
    cwd=`pwd`
  else
    cwd=$1
  fi
  indent=0
  paths=${cwd//\// }
  arr=($paths)
  depth=${#arr[@]}
  for d in $paths
  do
    no=$(($depth - $indent - 1))
    echo -n $no
    echo -n " "
    for ((s=0; s<$indent; s++))
    do
      echo -n " "
    done
    echo $d
    indent=$(($indent + 1))
  done
}

# ディレクトリを駆け上がる
function up() {
  level=$1
  if [ x$level == "x" ]
  then
    level=1
  fi

  cmd=""
  for i in `seq 1 $level`
  do
    cmd="${cmd}../"
  done
  cd $cmd
}

function ke() {
  if [[ ! -z $1 ]]; then
    namespace="--namespace $1"
  fi

  pod=$(kubectl get pods $namespace | sed 1d | fzf | awk '{print $1}')
  if [[ ! -z $pod ]]; then
    kubectl exec -it $namespace "$pod" sh
  fi
}

# Quote string
function quote () 
{ 
  if test "$1" == "-d" ; then
    echo \"${2//\"/\"\\\"\"}\"
  else
    echo \'${1//\'/\'\\\'\'}\'
  fi
}

function mkp5()
{
  local sketch=$1
  if [[ -d $sketch ]]
  then
    echo $sketch already exists
    return 1
  fi

  mkdir $sketch
  cd $sketch
  touch $sketch.pde
  vim $sketch.pde
}

#export -f sjis utf8 ddir mkdirc find_dir vimbg pecho dirtree up ke quote mkp5

